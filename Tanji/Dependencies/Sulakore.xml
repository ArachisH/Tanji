<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sulakore</name>
    </assembly>
    <members>
        <member name="T:Sulakore.Communication.DataInterceptedEventArgs">
            <summary>
            Represents an intercepted message that will be returned to the caller with blocking/replacing information.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.DataInterceptedEventArgs.#ctor(Sulakore.Protocol.HMessage,System.Int32,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Communication.DataInterceptedEventArgs"/> class.
            </summary>
            <param name="continuation">The <see cref="T:System.Func`1"/> of type <see cref="T:System.Threading.Tasks.Task"/> that will be invoked when <see cref="!:ContinueRead"/> is called.</param>
            <param name="step">The current count/step/order from which this data was intercepted.</param>
            <param name="packet">The intercepted data to read/write from.</param>
        </member>
        <member name="M:Sulakore.Communication.DataInterceptedEventArgs.Restore">
            <summary>
            Restores the intercepted data to its initial form, before it was replaced/modified.
            </summary>
        </member>
        <member name="T:Sulakore.Communication.HConnection">
            <summary>
            Represents a connection handler to intercept incoming/outgoing data from a post-shuffle hotel.
            </summary>
        </member>
        <member name="E:Sulakore.Communication.HConnection.Connected">
            <summary>
            Occurs when the intercepted local <see cref="T:Sulakore.Communication.HNode"/> initiates the handshake with the server.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.OnConnected(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Sulakore.Communication.HConnection.Connected"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Sulakore.Communication.HConnection.Disconnected">
            <summary>
            Occurs when either client/server have been disconnected, or when <see cref="M:Sulakore.Communication.HConnection.Disconnect"/> has been called if <see cref="P:Sulakore.Communication.HConnection.IsConnected"/> is true.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.OnDisconnected(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Sulakore.Communication.HConnection.Disconnected"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Sulakore.Communication.HConnection.DataOutgoing">
            <summary>
            Occurs when outgoing data from the local <see cref="T:Sulakore.Communication.HNode"/> has been intercepted.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.OnDataOutgoing(Sulakore.Communication.DataInterceptedEventArgs)">
            <summary>
            Raises the <see cref="E:Sulakore.Communication.HConnection.DataOutgoing"/> event.
            </summary>
            <param name="e">An <see cref="T:Sulakore.Communication.DataInterceptedEventArgs"/> that contains the event data.</param>
            <returns></returns>
        </member>
        <member name="E:Sulakore.Communication.HConnection.DataIncoming">
            <summary>
            Occurs when incoming data from the remote <see cref="T:Sulakore.Communication.HNode"/> has been intercepted.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.OnDataIncoming(Sulakore.Communication.DataInterceptedEventArgs)">
            <summary>
            Raises the <see cref="E:Sulakore.Communication.HConnection.DataIncoming"/> event.
            </summary>
            <param name="e">An <see cref="T:Sulakore.Communication.DataInterceptedEventArgs"/> that contains the event data.</param>
            <returns></returns>
        </member>
        <member name="P:Sulakore.Communication.HConnection.Port">
            <summary>
            Gets the port of the remote endpoint.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.Host">
            <summary>
            Gets the host name of the remote endpoint.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.Address">
            <summary>
            Gets the IP address of the remote endpoint.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.TotalOutgoing">
            <summary>
            Gets the total amount of packets the remote <see cref="T:Sulakore.Communication.HNode"/> has been sent from local.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.TotalIncoming">
            <summary>
            Gets the total amount of packets the local <see cref="T:Sulakore.Communication.HNode"/> received from remote.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.Local">
            <summary>
            Gets the <see cref="T:Sulakore.Communication.HNode"/> representing the local connection.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.Remote">
            <summary>
            Gets the <see cref="T:Sulakore.Communication.HNode"/> representing the remote connection.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.IsConnected">
            <summary>
            Gets a value that determines whether the <see cref="T:Sulakore.Communication.HConnection"/> has established a connection with the game.
            </summary>
        </member>
        <member name="P:Sulakore.Communication.HConnection.IsDisposed">
            <summary>
            Gets a value that determines whether the <see cref="T:Sulakore.Communication.HConnection"/> has been disposed.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Communication.HConnection"/> class.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.Disconnect">
            <summary>
            Disconnects from the remote endpoint.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.ConnectAsync(System.String,System.UInt16)">
            <summary>
            Intercepts the attempted connection on the specified port(s), and establishes a connection with the host in an asynchronous operation.
            </summary>
            <param name="host">The host to establish a connection with.</param>
            <param name="ports">The port(s) to intercept the local connection attempt.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Communication.HConnection.SendToServerAsync(System.Byte[])">
            <summary>
            Sends data to the remote <see cref="T:Sulakore.Communication.HNode"/> in an asynchronous operation.
            </summary>
            <param name="data">The data to send to the node.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Communication.HConnection.SendToServerAsync(System.UInt16,System.Object[])">
            <summary>
            Sends data to the remote <see cref="T:Sulakore.Communication.HNode"/> using the specified header, and chunks in an asynchronous operation.
            </summary>
            <param name="header">The header to be used for the construction of the packet.</param>
            <param name="chunks">The chunks/values that the packet will carry.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Communication.HConnection.SendToClientAsync(System.Byte[])">
            <summary>
            Sends data to the local <see cref="T:Sulakore.Communication.HNode"/> in an asynchronous operation.
            </summary>
            <param name="data">The data to send to the node.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Communication.HConnection.SendToClientAsync(System.UInt16,System.Object[])">
            <summary>
            Sends data to the local <see cref="T:Sulakore.Communication.HNode"/> using the specified header, and chunks in an asynchronous operation.
            </summary>
            <param name="header">The header to be used for the construction of the packet.</param>
            <param name="chunks">The chunks/values that the packet will carry.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Communication.HConnection.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Sulakore.Communication.HConnection"/>.
            </summary>
        </member>
        <member name="M:Sulakore.Communication.HConnection.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Sulakore.Communication.HConnection"/>.
            </summary>
            <param name="disposing">The value that determines whether managed resources should be disposed.</param>
        </member>
        <member name="P:Sulakore.Components.SKoreButton.DialogResult">
            <summary>
            Gets or sets a value that is returned to the parent form when the button is clicked.
            </summary>
        </member>
        <member name="E:Sulakore.Components.SKoreListView.ItemSelectionStateChanged">
            <summary>
            Occurs when an item's selection state differs from the previous state.
            </summary>
        </member>
        <member name="E:Sulakore.Components.SKoreListView.ItemSelected">
            <summary>
            Occurs when an item has been selected for the first time.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HAction">
            <summary>
            Specifies a set of actions a player can perform in-game
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HAction.None">
            <summary>
            Represents a player not performing any actions.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HAction.Move">
            <summary>
            Represents a moving player.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HAction.Sit">
            <summary>
            Represents a player that has sat down.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HAction.Lay">
            <summary>
            Represents a player that has laid down.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HAction.Sign">
            <summary>
            Represents a player holding up a <see cref="T:Sulakore.Habbo.HSign"/>.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HBan">
            <summary>
            Specifies the different types of bans found in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HBan.Hour">
            <summary>
            The original value for the packet is RWUAM_BAN_USER_HOUR.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HBan.Day">
            <summary>
            The original value for the packet is RWUAM_BAN_USER_DAY.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HBan.Permanent">
            <summary>
            The original value for the packet is RWUAM_BAN_USER_PERM.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HDance">
            <summary>
            Specifies the different types of dances your player can perform in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDance.None">
            <summary>
            Represents a non-dancing player.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDance.Normal">
            <summary>
            Represents the default dance any player can perform.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDance.PogoMogo">
            <summary>
            Represents the duck funk dance. (HC Only)
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDance.DuckFunk">
            <summary>
            Represents the pogo mogo dance. (HC Only).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDance.TheRollie">
            <summary>
            Represents the rollie dance. (HC Only)
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HDirection">
            <summary>
            Specifies the compass locations of an object/player in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.North">
            <summary>
            Represents an object/player facing north.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.NorthEast">
            <summary>
            Represents an object/player facing north east.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.East">
            <summary>
            Represents an object/player facing east.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.SouthEast">
            <summary>
            Represents an object/player facing south east.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.South">
            <summary>
            Represents an object/player facing south.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.SouthWest">
            <summary>
            Represents an object/player facing south west.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.West">
            <summary>
            Represents an object/player facing west.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HDirection.NorthWest">
            <summary>
            Represents an object/player facing north west.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HGender">
            <summary>
            Specifies the different gender types in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGender.Unisex">
            <summary>
            Represents a unisex player.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGender.Male">
            <summary>
            Represents a male player.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGender.Female">
            <summary>
            Represents a female player.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HGesture">
            <summary>
            Specifies a set of gestures a player can perform in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.None">
            <summary>
            Represents a player without any gesture.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.Wave">
            <summary>
            Represents a player waving.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.BlowKiss">
            <summary>
            Represents a player blowing a kiss. (HC Only)
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.Laugh">
            <summary>
            Represents a player laughing. (HC Only)
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.Idle">
            <summary>
            Represents a player sleeping.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.PogoHop">
            <summary>
            Represents a player hopping once. (HC Only)
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HGesture.ThumbsUp">
            <summary>
            Represents a player raising a thumbs up.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HModel">
            <summary>
            Specifies the different types of room models you can create in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.A">
            <summary>
            Represents a room with 104 tiles(8x13).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.B">
            <summary>
            Represents a room with 94 tiles((11x10) - (4x4)).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.C">
            <summary>
            Represents a room with 36 tiles(6x6).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.D">
            <summary>
            Represents a room with 84 tiles(6x14).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.E">
            <summary>
            Represents a room with 80 tiles(10x8).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.F">
            <summary>
            Represents a room with 84 tiles((10x10) - ((2x4)x2))
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.I">
            <summary>
            Represents a room with 416 tiles(16x26).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.J">
            <summary>
            Represents a room with 380 tiles((20x22) - (10x6)).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.K">
            <summary>
            Represents a room with 448 tiles(((24x26) - (8x10)) - ((8x4)x3)).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.L">
            <summary>
            Represents a room with 352 tiles((20x20) - (4x12))
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.M">
            <summary>
            Represents a room with 704 tiles((28x28) - (10x8))
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.N">
            <summary>
            Represents a room with 368 tiles((20x20) - (8x4)).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HModel.S">
            <summary>
            Represents a room with 35 tiles(5x7).
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HSign">
            <summary>
            Specifies the different types of signs found in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Zero">
            <summary>
            Represents a sign with an image of the number zero.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.One">
            <summary>
            Represents a sign with an image of the number one.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Two">
            <summary>
            Represents a sign with an image of the number two.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Three">
            <summary>
            Represents a sign with an image of the number three.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Four">
            <summary>
            Represents a sign with an image of the number four.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Five">
            <summary>
            Represents a sign with an image of the number five.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Six">
            <summary>
            Represents a sign with an image of the number six.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Seven">
            <summary>
            Represents a sign with an image of the number seven.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Eight">
            <summary>
            Represents a sign with an image of the number eight.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Nine">
            <summary>
            Represents a sign with an image of the number nine.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Ten">
            <summary>
            Represents a sign with an image of the number ten.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Heart">
            <summary>
            Represents a sign with an image of a heart.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Skull">
            <summary>
            Represents a sign with an image of a skull.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Exclamation">
            <summary>
            Represents a sign with an image of a exclamation mark.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Soccerball">
            <summary>
            Represents a sign with an image of a soccer ball.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Smiley">
            <summary>
            Represents a sign with an image of a smiley face.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Redcard">
            <summary>
            Represents a sign with an image of a small red card.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Yellowcard">
            <summary>
            Represents a sign with an image of a small yellow card.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSign.Invisible">
            <summary>
            Represents a an empty invisible sign with no image.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HSpeech">
            <summary>
            Specifies the different types of speech modes that players can communicate with each other in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSpeech.Say">
            <summary>
            Represents a speech mode that makes the message publicly visible within a determined range in the room.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSpeech.Shout">
            <summary>
            Represents a speech mode that makes the message public to everyone in the room.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HSpeech.Whisper">
            <summary>
            Represents a speech mode that only makes the message visible to the specified target regardless of the range.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HStance">
            <summary>
            Specifies the state of a player.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HStance.Stand">
            <summary>
            Represents a player that is standing.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HStance.Sit">
            <summary>
            Represents a player that is sitting.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HStance.Lay">
            <summary>
            Represents a player that is laying down.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HTheme">
            <summary>
            Specifies the different types of speech bubble themes found in-game.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.White">
            <summary>
            Represents the default(white) speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Red">
            <summary>
            Represents the red speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Blue">
            <summary>
            Represents the blue speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Yellow">
            <summary>
            Represents the yellow speech bubble.
            </summary>
            
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Green">
            <summary>
            Represents the green speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Black">
            <summary>
            Represents the black speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Ice">
            <summary>
            Represents the light-blue(ice) speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Pink">
            <summary>
            Represents the pink speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Purple">
            <summary>
            Represents the purple speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Gold">
            <summary>
            Represents the gold speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Turquoise">
            <summary>
            Represents the turquoise speech bubble.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Hearts">
            <summary>
            Represents a speech bubble with hearts in the background.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Roses">
            <summary>
            Represents a speech bubble with roses in the background.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Pig">
            <summary>
            Represents a speech bubble with a pig in the background.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Dog">
            <summary>
            Represents a speech bubble with a dog in the background.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HTheme.Swords">
            <summary>
            Represents a speech bubble with swords in the background.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HEntityAction">
            <summary>
            Represents an <see cref="T:Sulakore.Habbo.IHEntity"/> performing actions.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.Index">
            <summary>
            Gets or sets the room index value of the <see cref="T:Sulakore.Habbo.IHEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.IsEmpowered">
            <summary>
            Gets or sets a value that determines whether the <see cref="T:Sulakore.Habbo.IHEntity"/> has privileges.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.Tile">
            <summary>
            Gets or sets the <see cref="T:Sulakore.Habbo.HPoint"/> of where the <see cref="T:Sulakore.Habbo.IHEntity"/> is currently on.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.MovingTo">
            <summary>
            Gets or sets the <see cref="T:Sulakore.Habbo.HPoint"/> of where the <see cref="T:Sulakore.Habbo.IHEntity"/> will move to next.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.Sign">
            <summary>
            Gets or sets the <see cref="T:Sulakore.Habbo.HSign"/> that the <see cref="T:Sulakore.Habbo.IHEntity"/> has raised.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.Stance">
            <summary>
            Gets or sets the current <see cref="T:Sulakore.Habbo.HStance"/> of the <see cref="T:Sulakore.Habbo.IHEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.LastAction">
            <summary>
            Gets or sets the <see cref="T:Sulakore.Habbo.HAction"/> that the <see cref="T:Sulakore.Habbo.IHEntity"/> has recently done.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.HeadDirection">
            <summary>
            Gets or sets the head <see cref="T:Sulakore.Habbo.HDirection"/> of the <see cref="T:Sulakore.Habbo.IHEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntityAction.BodyDirection">
            <summary>
            Gets or sets the body <see cref="T:Sulakore.Habbo.HDirection"/> of the <see cref="T:Sulakore.Habbo.IHEntity"/>.
            </summary>
        </member>
        <member name="M:Sulakore.Habbo.HEntityAction.#ctor(System.Boolean,System.Int32,Sulakore.Habbo.HPoint,Sulakore.Habbo.HPoint,Sulakore.Habbo.HSign,Sulakore.Habbo.HStance,Sulakore.Habbo.HDirection,Sulakore.Habbo.HDirection,Sulakore.Habbo.HAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Habbo.HEntityAction"/> class with the specified information.
            </summary>
            <param name="isEmpowered">The value that determines whether the <see cref="T:Sulakore.Habbo.IHEntity"/> has privileges.</param>
            <param name="index">The room index value of the <see cref="T:Sulakore.Habbo.IHEntity"/>.</param>
            <param name="tile">The <see cref="T:Sulakore.Habbo.HPoint"/> of where the <see cref="T:Sulakore.Habbo.IHEntity"/> is currently on.</param>
            <param name="movingTo">The <see cref="T:Sulakore.Habbo.HPoint"/> of where the <see cref="T:Sulakore.Habbo.IHEntity"/> will move to next.</param>
            <param name="sign">The <see cref="T:Sulakore.Habbo.HSign"/> that the <see cref="T:Sulakore.Habbo.IHEntity"/> has raised.</param>
            <param name="stance">The current <see cref="T:Sulakore.Habbo.HStance"/> of the <see cref="T:Sulakore.Habbo.IHEntity"/>.</param>
            <param name="headDirection">The <see cref="T:Sulakore.Habbo.HDirection"/> of the <see cref="T:Sulakore.Habbo.IHEntity"/>'s head.</param>
            <param name="bodyDirection">The <see cref="T:Sulakore.Habbo.HDirection"/> of the <see cref="T:Sulakore.Habbo.IHEntity"/>'s body.</param>
            <param name="lastAction">The <see cref="T:Sulakore.Habbo.HAction"/> that the <see cref="T:Sulakore.Habbo.IHEntity"/> has recently done.</param>
        </member>
        <member name="M:Sulakore.Habbo.HEntityAction.Parse(Sulakore.Protocol.HMessage)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of type <see cref="T:Sulakore.Habbo.HEntityAction"/> found in the <see cref="T:Sulakore.Protocol.HMessage"/>.
            </summary>
            <param name="packet">The <see cref="T:Sulakore.Protocol.HMessage"/> that contains the <see cref="T:Sulakore.Habbo.HEntityAction"/> data to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Habbo.HEntityAction.ToString">
            <summary>
            Converts the <see cref="T:Sulakore.Habbo.HEntityAction"/> to a human-readable string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sulakore.Habbo.HEntity">
            <summary>
            Represents an in-game object that provides special information that makes it unique in a room.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.Id">
            <summary>
            Gets or sets the id of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.Index">
            <summary>
            Gets or sets the room index value of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.Name">
            <summary>
            Gets or sets the name of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.Motto">
            <summary>
            Gets or sets the motto of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.FigureId">
            <summary>
            Gets or sets the figure id of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.FavoriteGroup">
            <summary>
            Gets or sets the favorite group badge of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.Tile">
            <summary>
            Gets or sets the <see cref="T:Sulakore.Habbo.HPoint"/> of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HEntity.Gender">
            <summary>
            Gets or sets the gender of the <see cref="T:Sulakore.Habbo.HEntity"/>.
            </summary>
        </member>
        <member name="M:Sulakore.Habbo.HEntity.#ctor(System.Int32,System.Int32,System.String,Sulakore.Habbo.HPoint,System.String,Sulakore.Habbo.HGender,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Habbo.HEntity"/> class with the specified information,
            </summary>
            <param name="id">The id of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="index">The room index value of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="name">The name of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="tile">The <see cref="T:Sulakore.Habbo.HPoint"/> of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="motto">The motto of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="gender">The <see cref="T:Sulakore.Habbo.HGender"/> of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="figureId">The figure id of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
            <param name="favoriteGroup">The favorite group badge of the <see cref="T:Sulakore.Habbo.HEntity"/>.</param>
        </member>
        <member name="M:Sulakore.Habbo.HEntity.Parse(Sulakore.Protocol.HMessage)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of type <see cref="T:Sulakore.Habbo.HEntity"/> found in the <see cref="T:Sulakore.Protocol.HMessage"/>.
            </summary>
            <param name="packet">The <see cref="T:Sulakore.Protocol.HMessage"/> that contains the <see cref="T:Sulakore.Habbo.HEntity"/> data to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Habbo.HEntity.ToString">
            <summary>
            Converts the <see cref="T:Sulakore.Habbo.HEntity"/> to a human-readable string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sulakore.Habbo.HMap.Item(System.Int32)">
            <summary>
            Gets or sets the string representation of a row in the map.
            </summary>
            <param name="y">The y-coordinate of the row.</param>
            <returns></returns>
        </member>
        <member name="P:Sulakore.Habbo.HMap.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the UTF-16 character that represents the level in the three-dimensional plane.
            </summary>
            <param name="x">The x-coordinate in the plane.</param>
            <param name="y">The y-coordinate in the plane.</param>
            <returns></returns>
        </member>
        <member name="T:Sulakore.Habbo.HPoint">
            <summary>
            Represents a floor object's in-game position relative to the map's three-dimensional plane.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HPoint.X">
            <summary>
            Gets or sets the x-coordinate of the <see cref="T:Sulakore.Habbo.HPoint"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HPoint.Y">
            <summary>
            Gets or sets the y-coordinate of the <see cref="T:Sulakore.Habbo.HPoint"/>.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.HPoint.Z">
            <summary>
            Gets or sets the z-coordinate of the <see cref="T:Sulakore.Habbo.HPoint"/>.
            </summary>
        </member>
        <member name="M:Sulakore.Habbo.HPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Habbo.HPoint"/> class with the specified floor object coordinates.
            </summary>
            <param name="x">The horizontal position of the floor object.</param>
            <param name="y">The vertical position of the floor object.</param>
        </member>
        <member name="M:Sulakore.Habbo.HPoint.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Habbo.HPoint"/> class with the specified floor object coordinates.
            </summary>
            <param name="x">The horizontal position of the floor object.</param>
            <param name="y">The vertical position of the floor object.</param>
            <param name="z">The elevated position of the floor object.</param>
        </member>
        <member name="M:Sulakore.Habbo.HPoint.#ctor(System.Int32,System.Int32,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Sulakore.Habbo.HPoint"/> class with the specified floor object coordinates.
            </summary>
            <param name="x">The horizontal position of the floor object.</param>
            <param name="y">The vertical position of the floor object.</param>
            <param name="level">The UTF-16 character that represent a floor level in the room map.</param>
        </member>
        <member name="M:Sulakore.Habbo.HPoint.ToString">
            <summary>
            Converts the <see cref="T:Sulakore.Habbo.HPoint"/> to a human-readable string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sulakore.Habbo.IHEntity">
            <summary>
            Represents an in-game object that provides a unique identifier relative to the room.
            </summary>
        </member>
        <member name="P:Sulakore.Habbo.IHEntity.Index">
            <summary>
            Gets or sets the room index value of the <see cref="T:Sulakore.Habbo.IHEntity"/>.
            </summary>
        </member>
        <member name="T:Sulakore.Habbo.HHotel">
            <summary>
            Specifies the list of hotels currently being supported.
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.Com">
            <summary>
            Represents http://www.Habbo.com (Global).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.ComBr">
            <summary>
            Represents http://www.Habbo.com.br (Brazil).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.ComTr">
            <summary>
            Represents http://www.Habbo.com.tr (Turkey).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.De">
            <summary>
            Represents http://www.Habbo.de (Germany).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.Es">
            <summary>
            Represents http://www.Habbo.es (Spain).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.Fi">
            <summary>
            Represents http://www.Habbo.fi (Finland).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.Fr">
            <summary>
            Represents http://www.Habbo.fr (France).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.It">
            <summary>
            Represents http://www.Habbo.it (Italy).
            </summary>
        </member>
        <member name="F:Sulakore.Habbo.HHotel.Nl">
            <summary>
            Represents http://www.Habbo.nl (Netherlands).
            </summary>
        </member>
        <member name="T:Sulakore.Protocol.BigEndian">
            <summary>
            Converts base data types to an array of bytes in the big-endian byte order, and an array of bytes in the big-endian byte order to base data types.
            </summary>
        </member>
        <member name="M:Sulakore.Protocol.BigEndian.GetBytes(System.Int32)">
            <summary>
            Returns the specified 32-bit signed integer value as an array of bytes in the big-endian byte order.
            </summary>
            <param name="value">The number to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Protocol.BigEndian.GetBytes(System.UInt16)">
            <summary>
            Returns the specified 16-bit unsigned integer value as an array of bytes in the big-endian byte order.
            </summary>
            <param name="value">The number to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Protocol.BigEndian.ToInt32(System.Byte[],System.Int32)">
            <summary>
            Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array using the big-endian byte order.
            </summary>
            <param name="value">An array of bytes in the big-endian byte order.</param>
            <param name="startIndex">The starting position within the value.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.Protocol.BigEndian.ToUInt16(System.Byte[],System.Int32)">
            <summary>
            Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array using the big-endian byte order.
            </summary>
            <param name="value">An array of bytes in the big-endian byte order.</param>
            <param name="startIndex">The starting position within the value.</param>
            <returns></returns>
        </member>
        <member name="F:Sulakore.Protocol.Encryption.PKCSPadding.MaxByte">
            <summary>
            Represents a padding type that will fill a byte array's empty indices with the maximum value of a <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="F:Sulakore.Protocol.Encryption.PKCSPadding.RandomByte">
            <summary>
            Represents a padding type that will fill a byte array's empty indices with random byte values.
            </summary>
        </member>
        <member name="T:Sulakore.SKore">
            <summary>
            Provides static methods for extracting public information from a hotel.
            </summary>
        </member>
        <member name="M:Sulakore.SKore.GetAvatarAsync(System.String,Sulakore.Habbo.HSize)">
            <summary>
            Returns the avatar image of a specified size generated with the given figured id in an asynchronous operation.
            </summary>
            <param name="figureId">The figured id of the avatar.</param>
            <param name="size">The output size of the avatar image.</param>
        </member>
        <member name="M:Sulakore.SKore.GetUserAsync(System.String,Sulakore.Habbo.HHotel)">
            <summary>
            Returns the user's basic information associated with the given name using the specified <see cref="T:Sulakore.Habbo.HHotel"/> in an asynchronous operation.
            </summary>
            <param name="name">The name of the user.</param>
            <param name="hotel">The hotel where the target user is from.</param>
        </member>
        <member name="M:Sulakore.SKore.GetUniqueIdAsync(System.String,Sulakore.Habbo.HHotel)">
            <summary>
            Returns the user's unique identifier associated with the given name using the specified <see cref="T:Sulakore.Habbo.HHotel"/> in an asynchronous operation.
            </summary>
            <param name="name">The name of the user.</param>
            <param name="hotel">The hotel where the target user is from.</param>
        </member>
        <member name="M:Sulakore.SKore.GetProfileAsync(System.String,Sulakore.Habbo.HHotel)">
            <summary>
            Returns the user's public profile information associated with the given name using the specified <see cref="T:Sulakore.Habbo.HHotel"/> in an asynchronous operation.
            </summary>
            <param name="name">The name of the user.</param>
            <param name="hotel">The hotel where the target user is from.</param>
        </member>
        <member name="M:Sulakore.SKore.GetProfileByUniqueIdAsync(System.String,Sulakore.Habbo.HHotel)">
            <summary>
            Returns the user's public profile information associated with the given unique indentifier using the specified <see cref="T:Sulakore.Habbo.HHotel"/> in an asynchronous operation.
            </summary>
            <param name="uniqueId">The unique identifier of the user.</param>
            <param name="hotel">The hotel where the target user is from.</param>
        </member>
        <member name="M:Sulakore.SKore.Juice(Sulakore.Habbo.HBan)">
            <summary>
            Returns the primitive value for the specified <see cref="T:Sulakore.Habbo.HBan"/>.
            </summary>
            <param name="ban">The <see cref="T:Sulakore.Habbo.HBan"/> you wish to retrieve the primitive value from.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.ToDomain(Sulakore.Habbo.HHotel)">
            <summary>
            Returns the domain associated with the specified <see cref="T:Sulakore.Habbo.HHotel"/>.
            </summary>
            <param name="hotel">The <see cref="T:Sulakore.Habbo.HHotel"/> that is associated with the wanted domain.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.ToUrl(Sulakore.Habbo.HHotel,System.Boolean)">
            <summary>
            Returns the full URL representation of the specified <seealso cref="T:Sulakore.Habbo.HHotel"/>.
            </summary>
            <param name="hotel">The <seealso cref="T:Sulakore.Habbo.HHotel"/> you wish to retrieve the full URL from.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.ToBan(System.String)">
            <summary>
            Returns the <see cref="T:Sulakore.Habbo.HBan"/> associated with the specified value.
            </summary>
            <param name="ban">The string representation of the <see cref="T:Sulakore.Habbo.HBan"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.ToHotel(System.String)">
            <summary>
            Returns the <see cref="T:Sulakore.Habbo.HHotel"/> associated with the specified value.
            </summary>
            <param name="host">The string representation of the <see cref="T:Sulakore.Habbo.HHotel"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.ToGender(System.String)">
            <summary>
            Returns the <see cref="T:Sulakore.Habbo.HGender"/> associated with the specified value.
            </summary>
            <param name="gender">The string representation of the <see cref="T:Sulakore.Habbo.HGender"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.Unsubscribe``1(System.EventHandler{``0}@)">
            <summary>
            Iterates through an event's list of subscribed delegates, and begins to unsubscribe them from the event.
            </summary>
            <typeparam name="T">The type of the event handler.</typeparam>
            <param name="eventHandler">The event handler to unsubscribe the subscribed delegates from.</param>
        </member>
        <member name="M:Sulakore.SKore.GetChild(System.String,System.String)">
            <summary>
            Returns a new string that begins where the parent ends in the source.
            </summary>
            <param name="source">The string that contains the child.</param>
            <param name="parent">The string that comes before the child.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.GetParent(System.String,System.String)">
            <summary>
            Returns a new string that ends where the child begins in the source.
            </summary>
            <param name="source">The string that contains the parent.</param>
            <param name="child">The string that comes after the parent.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.GetParent(System.String,System.String,System.Char[])">
            <summary>
            Returns a new string that is between the delimiters, and the child in the source.
            </summary>
            <param name="source">The string that contains the parent.</param>
            <param name="child">The string that comes after the parent.</param>
            <param name="delimiters">The Unicode characters that will be used to split the parent, returning the last split value.</param>
            <returns></returns>
        </member>
        <member name="M:Sulakore.SKore.GetChild(System.String,System.String,System.Char[])">
            <summary>
            Returns a new string that is between the parent, and the delimiters in the source.
            </summary>
            <param name="source">The string that contains the child.</param>
            <param name="parent">The string that comes before the child.</param>
            <param name="delimiters">The Unicode characters that will be used to split the child, returning the first split value.</param>
            <returns></returns>
        </member>
    </members>
</doc>
